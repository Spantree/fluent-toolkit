/**
 * Template Renderer
 * Simple template rendering for CLAUDE.md sections
 */

import type { MCPServer } from "../types/index.ts";

export class TemplateRenderer {
  /**
   * Render MCP overview section for CLAUDE.md
   */
  static renderMCPOverview(servers: MCPServer[]): string {
    const sections: string[] = [
      "## MCP Servers Configuration",
      "",
      "This project uses the following MCP servers managed by Fluent Toolkit:",
      "",
    ];

    for (const server of servers) {
      sections.push(`### ${server.name}`, "");
      sections.push(`**Purpose**: ${server.description}`, "");

      // Add usage
      sections.push(
        "**Usage**: Claude Code automatically uses this server when appropriate.",
        "",
      );

      // Add examples if available
      if (server.usageExamples && server.usageExamples.length > 0) {
        sections.push("**Example**:");
        sections.push("```");
        sections.push(server.usageExamples[0]);
        sections.push("```");
        sections.push("");
      }
    }

    return sections.join("\n");
  }

  /**
   * Render env template with actual secret keys
   */
  static renderEnvTemplate(secretKeys: string[]): string {
    const lines = [
      "# Generated by ftk - DO NOT COMMIT",
      "# MCP Server Secrets",
      "",
    ];

    for (const key of secretKeys) {
      lines.push(`${key}=your_key_here`);
    }

    lines.push("");

    return lines.join("\n");
  }
}
